{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts","webpack:///./src/app/list/services/projet-service.ts"],"names":[],"mappings":"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","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { ListPage } from './list.page';\nimport {ProjetService} from './services/projet-service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HttpClientModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage],\n  providers: [ProjetService]\n})\nexport class ListPageModule {}\n","module.exports = \"\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Projets\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngIf=\\\"projets\\\">\\n    <ion-item  *ngFor=\\\"let projet of projets\\\" (click)=\\\"navigate(projet)\\\">\\n      {{projet.llProjet}}\\n      <div class=\\\"item-note\\\" slot=\\\"end\\\">\\n        {{projet.ucProjet}}\\n      </div>\\n    </ion-item>\\n  </ion-list>\\n  <!--\\n    <div *ngIf=\\\"selectedItem\\\" padding>\\n      You navigated here from <b>{{selectedItem.title }}</b>\\n    </div>\\n  -->\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ProjetService} from './services/projet-service';\nimport { Projet} from './model/projet';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n  private selectedItem: any;\n  private icons = [\n    'flask',\n    'wifi',\n    'beer',\n    'football',\n    'basketball',\n    'paper-plane',\n    'american-football',\n    'boat',\n    'bluetooth',\n    'build'\n  ];\n  public items: Array<{ title: string; note: string; icon: string }> = [];\n  public projets=[];\n  constructor(private projetService:ProjetService, private router:Router) {\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  ngOnInit() {\n   \n    this.projetService.getProjets().subscribe(\n      results => { \n        this.projets = results;\n      }\n    );\n  }\n  // add back when alpha.4 is out\n   navigate(projet:Projet) {\n     let ucProjet = projet.ucProjet;\n     let llProjet = projet.llProjet;\n     this.router.navigate(['process/',{ucProjet,llProjet}]);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Projet } from '../model/projet';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjetService {\r\n projets = [];\r\n  constructor(private http:HttpClient) { \r\n    let p1 = new Projet(\"KNFR124801\",\"Nantes Nord\");\r\n    let p2 = new Projet(\"KNFR124802\",\"Nantes Ouest\");\r\n    this.projets[0]= p1;\r\n    this.projets[1]= p2;\r\n     \r\n  }\r\n\r\n  getProjets():Observable<Projet[]>{\r\n    console.log(this.projets);\r\n    return of(this.projets);\r\n  }\r\n  getProjet(ucProjet:string):Projet {\r\n      return this.projets.find(projet=> projet.ucProjet === ucProjet);\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}