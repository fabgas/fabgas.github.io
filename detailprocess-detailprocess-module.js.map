{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/app/detailprocess/detailprocess.module.ts","webpack:///./src/app/detailprocess/detailprocess.page.html","webpack:///./src/app/detailprocess/detailprocess.page.scss","webpack:///./src/app/detailprocess/detailprocess.page.ts","webpack:///./src/app/detailprocess/model/detail-process.ts","webpack:///./src/app/detailprocess/service/detail-process-service.ts"],"names":[],"mappings":"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","file":"detailprocess-detailprocess-module.js","sourcesContent":["module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\nimport { DetailProcessService} from './service/detail-process-service';\nimport { DetailprocessPage } from './detailprocess.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailprocessPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,HttpClientModule,\n    RouterModule.forChild(routes)\n  ],\n  providers:[DetailProcessService],\n  declarations: [DetailprocessPage]\n})\nexport class DetailprocessPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar *ngIf=\\\"detailProcessus\\\" color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{detailProcessus.llProcessus}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card>\\n    <ion-card-content>\\n      <div class=\\\"datas\\\">\\n        <div class=\\\"item\\\">\\n          <p class=\\\"cellheader\\\">{{detailProcessus.heures}}</p>\\n          <p class=\\\"cell\\\">heures</p>\\n        </div>\\n        <div class=\\\"item\\\">\\n          <p class=\\\"cellheader\\\">{{detailProcessus.volume}}</p>\\n           <p class=\\\"cell\\\">{{detailProcessus.ucObjet}}</p>\\n        </div>\\n        <div class=\\\"item\\\">\\n          <p [ngClass]=\\\"{'cellheader':true,'red':detailProcessus.prod<detailProcessus.prodcible}\\\">{{detailProcessus.prod| number:'1.0-0'}}</p>\\n          <p class=\\\"cell\\\">obj/h</p>\\n        </div>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n      <ion-segment-button  value=\\\"TOUS\\\" checked>\\n          Tous\\n         </ion-segment-button>\\n      <ion-segment-button *ngFor =\\\"let shift of shifts\\\" [value]=\\\"shift.ucShift\\\">\\n       {{shift.ucShift}}\\n      </ion-segment-button>\\n  </ion-segment>\\n <br/>\\n  <ion-list>\\n      <ion-grid>\\n          <ion-row class=\\\"headerOperateurs\\\" (click)='orderByName()'>\\n            <ion-col size=\\\"6\\\" >\\n              Opérateurs({{countOperateurs}})\\n            </ion-col>\\n            <ion-col  class=\\\"data\\\" (click)='orderByHeures()'>\\n              H\\n            </ion-col>\\n            <ion-col  class=\\\"data\\\" (click)='orderByVolume()'>\\n              Vol\\n            </ion-col>\\n            <ion-col  class=\\\"data\\\" (click)='orderByProd()'>\\n              Prod\\n            </ion-col>\\n          </ion-row>\\n          <div *ngFor=\\\"let ope of listeOperateurs\\\" class=\\\"divlist\\\">\\n              <hr>\\n          <ion-row  class=\\\"lineOperateur\\\">\\n              <ion-col size=\\\"6\\\">\\n                {{ope.llOperateur}}\\n              </ion-col>\\n              <ion-col class=\\\"data\\\">\\n                  {{ope.heures| number:'1.1-1'}}\\n              </ion-col>\\n              <ion-col class=\\\"data\\\">\\n                  {{ope.volume| number:'1.0-0'}}\\n              </ion-col>\\n              <ion-col class=\\\"data\\\">\\n                  {{ope.prod| number:'1.0-0'}}\\n              </ion-col>\\n              \\n            </ion-row>\\n            \\n          </div>\\n      </ion-grid>\\n    </ion-list>\\n</ion-content>\\n\"","module.exports = \".ion-icon {\\n  font-size: 40px; }\\n\\n.text {\\n  font-size: 20px;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.toolbar {\\n  background-color: lightblue; }\\n\\n.datas {\\n  display: flex;\\n  flex-flow: row;\\n  justify-content: space-between;\\n  /* Then we define how is distributed the remaining space */\\n  justify-content: space-evenly; }\\n\\n.cellheader {\\n  font-size: 2em;\\n  color: white;\\n  text-align: center;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  background-color: #03A9F4; }\\n\\n.cellobjet {\\n  font-size: 1em;\\n  color: grey;\\n  font-style: italic;\\n  text-align: left; }\\n\\n.item {\\n  flex-grow: 1;\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.cell {\\n  font-size: 1em;\\n  color: black;\\n  text-align: center;\\n  font-weight: bold;\\n  background-color: #039BE5; }\\n\\n.red {\\n  background-color: red;\\n  text-align: center; }\\n\\n.lineOperateur {\\n  font-size: 0.8em; }\\n\\n.data {\\n  font-size: 1em;\\n  text-align: right; }\\n\\n.headerOperateurs {\\n  color: grey;\\n  font-size: 0.8em; }\\n\\n.divlist {\\n  padding: 0px;\\n  margin: 0px; }\\n\\nhr {\\n  display: block;\\n  margin-top: 0.0em;\\n  margin-bottom: 0.0em;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background-color: grey; }\\n\\n.card-content-ios {\\n  padding: 5px; }\\n\\n.card-content-md {\\n  padding: 5px; }\\n\\n.sc-ion-card-md-h {\\n  margin: 0px; }\\n\\n.sc-ion-card-ios-h {\\n  margin: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from \"@angular/router\";\nimport * as _ from 'lodash';\nimport { DetailProces,OperatorDetailProcess } from './model/detail-process';\nimport { DetailProcessService} from './service/detail-process-service';\n\n@Component({\n  selector: 'app-detailprocess',\n  templateUrl: './detailprocess.page.html',\n  styleUrls: ['./detailprocess.page.scss'],\n})\nexport class DetailprocessPage implements OnInit {\n  listeOperateurs: OperatorDetailProcess[];\n  detailProcessus : DetailProces;\n  detailOperateurProcessus: OperatorDetailProcess[];\n  shifts:OperatorDetailProcess[];\n  countOperateurs:number;\n  constructor(private route: ActivatedRoute,private processDetailService: DetailProcessService) { }\n\n  ngOnInit() {\n  this.route.params.subscribe( params => this.processDetailService.getDetailProcess(params.ucProcessus).subscribe(\n        result => this.detailProcessus = result\n      )\n   )\n   this.route.params.subscribe( params => this.processDetailService.getProcessDetail(params.ucProjet,params.ucProcessus,params.date).subscribe(\n         result => {console.log(result); \n          result=  _.sortBy(result,ope => ope.llOperateur);\n                    this.detailOperateurProcessus = result;\n                  \n                    this.shifts= _.uniqBy(result,ope => ope.ucShift);\n                  //  let noShift = new OperatorDetailProcess(\"\",\"\",\"\",\"\",0,0);\n                  //  this.shifts.unshift(noShift);\n                   // console.log(this.shifts);\n                    //this.filtreShift(this.shifts[0].ucShift);\n                    this.listeOperateurs = _.cloneDeep(this.detailOperateurProcessus);\n                    this.countOperateurs = this.listeOperateurs.length;\n                  }\n      )\n     )\n  }\n  \n  segmentChanged(event) {\n    console.log(event);\n    let ucShift = event.detail.value;\n     this.filtreShift(ucShift);\n    \n  }\n  filtreShift(ucShift:string) {\n    this.listeOperateurs = [];\n    if (ucShift==='TOUS') {\n      this.listeOperateurs = _.cloneDeep(this.detailOperateurProcessus);\n      this.countOperateurs = this.listeOperateurs.length;\n    }\n    else{\n      \n      this.listeOperateurs = _.filter(this.detailOperateurProcessus, {'ucShift': ucShift});\n      this.countOperateurs = this.listeOperateurs.length;\n    }\n  }\n\n  orderByHeures() {\n    console.log(\"tri par heures\");\n\n    this.listeOperateurs = _.sortBy(this.listeOperateurs,ope => ope.heures);\n  }\n  orderByVolume() {\n    this.listeOperateurs = _.sortBy(this.listeOperateurs,ope => ope.volumes);\n  }\n  orderByProd() {\n    this.listeOperateurs = _.sortBy(this.listeOperateurs,ope => ope.prod);\n  }\n  \n  orderByName() {\n    this.listeOperateurs = _.sortBy(this.listeOperateurs,ope => ope.llOperateur);\n  }\n}\n","export class DetailProces {\r\n    ucProcessus : string;\r\n    llProcessus : string;\r\n    ucObjet     : string;\r\n    ucSpecialisation : string;\r\n    volume:number;\r\n    heures:number;\r\n    prodcible:number;\r\n    prod:number;\r\n\r\n    constructor(ucProcessus:string,llProcessus:string,ucObjet:string,ucSpecialisation:string,volume:number,heures:number,prodcible:number) {\r\n        this.ucProcessus = ucProcessus;\r\n        this.llProcessus = llProcessus;\r\n        this.ucObjet = ucObjet;\r\n        this.ucSpecialisation=ucSpecialisation;\r\n        this.volume = volume;\r\n        this.heures = heures;\r\n        this.prodcible = prodcible;\r\n        if (heures && heures>0)\r\n        this.prod = this.volume/this.heures;\r\n    }\r\n}\r\nexport class OperatorDetailProcess {\r\n    ucOperateur : string;\r\n    llOperateur : string;\r\n    ucShift     : string;\r\n    ucProcessus : string;\r\n    volume      : number;\r\n    heures      : number;\r\n    prod        : number;\r\n    constructor(ucOperateur : string,llOperateur : string,ucShift : string, ucProcessus : string, volume : number, heures : number) {\r\n        this.ucOperateur = ucOperateur;\r\n        this.llOperateur = llOperateur;\r\n        this.ucShift = ucShift;\r\n        this.ucProcessus = ucProcessus;\r\n        this.volume = volume;\r\n        this.heures = heures;\r\n        if (this.heures && this.heures>0)\r\n            this.prod = this.volume/this.heures;\r\n \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { DetailProces,OperatorDetailProcess } from '../model/detail-process';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map,tap } from 'rxjs/operators';\r\n\r\n\r\n/**\r\n * La structure des données renvoyées est la suivantes :\r\n *  - detail du processus (global) : heure réelles, volumes objet principal, productivité réelle  \r\n *                                   capacité de prod,volumes planifiés , productivité cible\r\n *                                      -> Resultats de type T ou P ?\r\n * - Détail par opérateur et par processus : heures , volumes objets, prod objet principal\r\n *                                     -> saisie conso réelle.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetailProcessService {\r\n  process = [];\r\n  datas : OperatorDetailProcess[][][]\r\n  constructor(private http: HttpClient) {\r\n    let p1 = new DetailProces(\"INBOUND-1\", \"Inbound-1\", \"Palette\", \"\", 1000, 57, 19);\r\n    let p2 = new DetailProces(\"OUTBOUND-1\", \"Outbound-1\", \"Colis\", \"\", 857, 26, 38);\r\n    let p3 = new DetailProces(\"INBOUND-2\", \"Inbound-2\", \"Palette\", \"\", 100, 10, 8);\r\n    let p4 = new DetailProces(\"OUTBOUND-2\", \"Outbound-2\", \"Colis\", \"\", 857, 25, 39);\r\n    let p5 = new DetailProces(\"INBOUND-3\", \"Inbound-3\", \"Palette\", \"\", 25000, 95, 200);\r\n    let p6 = new DetailProces(\"OUTBOUND-3\", \"Outbound-3\", \"Colis\", \"\", 3568, 35, 101);\r\n    let p7 = new DetailProces(\"INBOUND-4\", \"Inbound-4\", \"Palette\", \"\", 8999, 125, 90);\r\n    let p8 = new DetailProces(\"OUTBOUND-4\", \"Outbound-4\", \"Colis\", \"\", 560, 12, 45);\r\n    this.process[0] = p1;\r\n    this.process[1] = p2;\r\n    this.process[2] = p3;\r\n    this.process[3] = p4;\r\n    this.process[4] = p5;\r\n    this.process[5] = p6;\r\n    this.process[6] = p7;\r\n    this.process[7] = p8;\r\n    this.datas=[];\r\n   \r\n    \r\n\r\n  }\r\n\r\n  getDetailProcess(ucProcessus: string): Observable<DetailProces> {\r\n    let result = this.process.find(pro => pro.ucProcessus === ucProcessus);\r\n    return of(result);\r\n  }\r\n  getProcessDetail(ucProjet:string,ucProcessus:string,date:any):Observable<OperatorDetailProcess[]>{\r\n    if (!this.datas[ucProjet]) {\r\n      this.datas[ucProjet] = [];\r\n    }\r\n    if (this.datas[ucProjet][date]) {\r\n     let  details = _.filter(this.datas[ucProjet][date], detailOperateur => detailOperateur.ucProcessus === ucProcessus);\r\n      return of(details);\r\n    }\r\n   return this.http.get<OperatorDetailProcess[]>(\"/assets/datas/date_1.json\")\r\n   .pipe(\r\n     tap(res => console.log(res) ),\r\n     tap(res => _.forEach(res,ope=>{ if (ope.heures && ope.heures>0)ope.prod = ope.volume/ope.heures;})),\r\n    tap(res => this.datas[ucProjet][date] = res),\r\n    map(res =>  _.filter(res,{'ucProcessus':ucProcessus})))\r\n    ;\r\n\r\n  }\r\n//   .subscribe(res => { this.datas[ucProjet][date] = res;\r\n   \r\n//    let  details = _.filter(this.datas[ucProjet][date],{'ucProcessus':ucProcessus});\r\n//     return of(details);});\r\n//  }\r\n}\r\n\r\n"],"sourceRoot":""}